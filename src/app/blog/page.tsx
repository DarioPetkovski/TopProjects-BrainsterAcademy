"use client";
import Head from "next/head";
import React, { useEffect, useState } from "react";
import BlogItem, { BlogIntem } from "../../components/BlogItem";
import PageTitle from "../../components/PageTitle";
import { usePathname, useRouter, useSearchParams } from "next/navigation";
import { faSearch } from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";

const fetchData = async (url: string) => {
  const data = await fetch(url).then((res) => res.json());
  return data;
};

export default function Blog() {
  const router = useRouter();
  const searchParams = useSearchParams();
  const query = searchParams.get("q");
  const category = searchParams.get("category");
  const pathName = usePathname().split("/")[1].toUpperCase();
  const [blogs, setBlogs] = useState<BlogIntem[]>([]);
  const [searchValue, setSearchValue] = useState<{ blog: string }>({
    blog: "",
  });
  const fetchBlogs = async () => {
    const data = await fetchData("http://localhost:5001/blogs");
    setBlogs(data);
  };
  useEffect(() => {
    fetchBlogs();
  }, []);
  const getSearchParams = async (e: any) => {
    e.preventDefault();
    let filterSearch;
    if (searchValue.blog || searchValue.blog === "") {
      filterSearch = await fetchData(
        `http://localhost:5001/blogs?q=${searchValue.blog}`
      );
      router.push(`/blog?q=${searchValue.blog}`);
      setBlogs(filterSearch);
      const categoryParam =
        category === "fashion"
          ? "fashion"
          : category === "beauty"
          ? "beauty"
          : category === "street style"
          ? "street style"
          : category === "life style"
          ? "life style"
          : category === "diy & crafts"
          ? "diy & crafts"
          : "";
      if (categoryParam !== "") {
        router.push(`/blog?category=${categoryParam}&q=${searchValue.blog}`);
        const blogsByQueryParams = await fetchData(
          `http://localhost:5001/blogs?category=${categoryParam}&q=${searchValue.blog}`
        );
        setBlogs(blogsByQueryParams);
      }
    }
  };

  const onClickFilterCategory = async (
    param: string,
    value: string,
    query: string
  ) => {
    let filterCategory;
    if (query) {
      filterCategory = await fetchData(
        `http://localhost:5001/blogs${param + value + query + searchValue.blog}`
      );
      router.push(`${param + value + query + searchValue.blog}`);
      setBlogs(filterCategory);
    } else {
      filterCategory = await fetchData(
        `http://localhost:5001/blogs${param + value}`
      );
      router.push(param + value);
      setBlogs(filterCategory);
    }
  };

  return (
    <>
      <Head>
        <title>Store - Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title={pathName} />

      <section className="bg0 p-t-62 p-b-60">
        <div className="container">
          <div className="row">
            <div className="col-md-8 col-lg-9 p-b-80">
              <div className="p-r-45 p-r-0-lg">
                {/* blog item */}
                {blogs.length > 0 ? (
                  blogs.map((item: BlogIntem) => {
                    return <BlogItem key={item.id} {...item} />;
                  })
                ) : (
                  <p>There are no results with your search.</p>
                )}
              </div>
            </div>

            <div className="col-md-4 col-lg-3 p-b-80">
              <div className="side-menu">
                <form
                  onSubmit={(e: any) => getSearchParams(e)}
                  className="bor17 of-hidden pos-relative"
                >
                  <input
                    className="stext-103 cl2 plh4 size-116 p-l-28 p-r-55"
                    type="text"
                    name="q"
                    placeholder="Search"
                    onChange={(e: any) =>
                      setSearchValue({ blog: e.target.value })
                    }
                    value={searchValue.blog}
                  />

                  <button
                    type="submit"
                    className="flex-c-m size-122 ab-t-r fs-18 cl4 hov-cl1 trans-04"
                  >
                    <div className="icon-shop-item">
                      <FontAwesomeIcon icon={faSearch} />
                    </div>
                  </button>
                </form>

                <div className="p-t-55">
                  <h4 className="mtext-112 cl2 p-b-33">Categories</h4>

                  <ul>
                    <li className="bor18">
                      <button
                        onClick={() =>
                          onClickFilterCategory(
                            "?category=",
                            "fashion",
                            `${!query ? "" : "&q="}`
                          )
                        }
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                      >
                        Fashion
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        onClick={() =>
                          onClickFilterCategory(
                            "?category=",
                            "beauty",
                            `${!query ? "" : "&q="}`
                          )
                        }
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                      >
                        Beauty
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        onClick={() =>
                          onClickFilterCategory(
                            "?category=",
                            "streetstyle",
                            `${!query ? "" : "&q="}`
                          )
                        }
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                      >
                        Street Style
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        onClick={() =>
                          onClickFilterCategory(
                            "?category=",
                            "lifestyle",
                            `${!query ? "" : "&q="}`
                          )
                        }
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                      >
                        Life Style
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        onClick={() =>
                          onClickFilterCategory(
                            "?category=",
                            "diy&category=crafts",
                            `${!query ? "" : "&q="}`
                          )
                        }
                        className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4"
                      >
                        DIY & Crafts
                      </button>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
}
