"use client";
import BlogItem, { BlogIntem } from "@/components/BlogItem";
import PageTitle from "@/components/PageTitle";
import ProductItem, { Product } from "@/components/ProductItem";
import Head from "next/head";
import { usePathname, useSearchParams } from "next/navigation";
import { Dispatch, SetStateAction, useEffect, useState } from "react";

const fetchData = (url: string) => {
  const data = fetch(url).then((res) => res.json());
  return data;
};

export default function Search() {
  const pathname = usePathname().split("/")[1];
  const searchParams = useSearchParams();
  const query = searchParams.get("q");
  const [products, setProducts] = useState<Product[]>([]);
  const [blogs, setBlogs] = useState<BlogIntem[]>([]);
  type ProductSetter = Dispatch<SetStateAction<Product[]>>;
  type BlogSetter = Dispatch<SetStateAction<BlogIntem[]>>;

  const fetchItems = async (
    endpoint: string,
    queryParam: string | null,
    setter: ProductSetter | BlogSetter
  ) => {
    const fetchResults = await fetchData(
      `http://localhost:5001/${endpoint}?q=${queryParam}`
    );
    setter(fetchResults);
  };

  useEffect(() => {
    fetchItems("products", query, setProducts);
    fetchItems("blogs", query, setBlogs);
  }, [query]);
  return (
    <>
      <Head>
        <title>Store - Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title={pathname} />

      <div className="bg0 m-t-23 p-b-140 mt-5">
        <div className="container">
          {blogs.length > 0 && (
            <>
              <h2 className="mb-5">Blogs</h2>
              <div className="row isotope-grid">
                {/* blog skeleton - search result */}
                {blogs.map((item) => {
                  return (
                    <div className="col-4">
                      <BlogItem {...item} />
                    </div>
                  );
                })}
                {/* !! */}
              </div>
            </>
          )}

          {products.length > 0 && (
            <>
              <h2 className="mb-5">Products</h2>
              <div className="row isotope-grid">
                {/* product skeleton */}
                {products.map((item) => {
                  return <ProductItem {...item} />;
                })}
                {/* !! */}
              </div>
            </>
          )}
        </div>
      </div>
    </>
  );
}
